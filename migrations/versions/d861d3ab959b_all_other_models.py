"""all other models

Revision ID: d861d3ab959b
Revises: 7d79e76ea747
Create Date: 2025-06-26 17:49:03.292177

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW


# revision identifiers, used by Alembic.
revision = 'd861d3ab959b'
down_revision = '7d79e76ea747'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calibration_parameter',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('calibration', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('camera_fusion',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id_fusion', sa.Integer(), nullable=False),
    sa.Column('camera', sa.Integer(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_fusion', 'camera', 'id')
    )
    op.create_table('fusion',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('timestamp', sa.DECIMAL(precision=17, scale=10), nullable=False),
    sa.Column('fusion_type', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fusion_parameter',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id_fusion', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('x', sa.Float(), nullable=False),
    sa.Column('y', sa.Float(), nullable=False),
    sa.Column('z', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('image_type',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measurement',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DECIMAL(precision=17, scale=10), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measurement_type',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('sensor', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paramname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datatype', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unitx', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unitz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('axisnamex', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('axisnamey', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('axisnamez', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measurement_value',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.Column('id_col', sa.Integer(), nullable=False),
    sa.Column('id_row', sa.Integer(), nullable=False),
    sa.Column('id_depth', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('measurement_id', 'id_col', 'id_row', 'id_depth', 'id')
    )
    op.create_table('picked_gcp',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('calibration', sa.String(), nullable=False),
    sa.Column('gcp_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('u', sa.Float(), nullable=False),
    sa.Column('v', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('calibration', 'id')
    )
    op.create_table('roi',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('calibration_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DECIMAL(precision=17, scale=10), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timestack',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('camera', sa.Integer(), nullable=True),
    sa.Column('inittime', sa.DECIMAL(precision=17, scale=10), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('fps', sa.Float(), nullable=False),
    sa.Column('numFrames', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('filename', 'id')
    )
    op.create_table('calibration_value',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id_param', sa.Integer(), nullable=False),
    sa.Column('id_col', sa.Integer(), nullable=False),
    sa.Column('id_row', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['id_param'], ['calibration_parameter.id'], ),
    sa.PrimaryKeyConstraint('id_param', 'id_col', 'id_row')
    )
    op.create_table('fusion_value',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id_matrix', sa.Integer(), nullable=False),
    sa.Column('id_col', sa.Integer(), nullable=False),
    sa.Column('id_row', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['id_matrix'], ['fusion_parameter.id'], ),
    sa.PrimaryKeyConstraint('id_matrix', 'id_col', 'id_row')
    )
    op.create_table('merged_image',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('fusion_id', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_type_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Float(), nullable=False),
    sa.Column('ismini', sa.Boolean(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['image_type_id'], ['image_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    op.create_table('oblique_image',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('camera', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_type_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Float(), nullable=False),
    sa.Column('ismini', sa.Boolean(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['image_type_id'], ['image_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    op.create_table('rectified_image',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('calibration', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_type_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Float(), nullable=False),
    sa.Column('ismini', sa.Boolean(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['image_type_id'], ['image_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    op.create_table('roi_coordinate',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('roi_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('u', sa.Float(), nullable=False),
    sa.Column('v', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['roi_id'], ['roi.id'], ),
    sa.PrimaryKeyConstraint('roi_id', 'id')
    )
    op.create_table('calibration',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('camera', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DECIMAL(precision=17, scale=10), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resolution', sa.Float(), nullable=False),
    sa.Column('EMCuv', sa.Float(), nullable=True),
    sa.Column('EMCxy', sa.Float(), nullable=True),
    sa.Column('NCE', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['camera'], ['camera.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('ix_sensor_name', table_name='sensor')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_sensor_name', 'sensor', ['name'], unique=False)
    op.drop_table('calibration')
    op.drop_table('roi_coordinate')
    op.drop_table('rectified_image')
    op.drop_table('oblique_image')
    op.drop_table('merged_image')
    op.drop_table('fusion_value')
    op.drop_table('calibration_value')
    op.drop_table('timestack')
    op.drop_table('roi')
    op.drop_table('picked_gcp')
    op.drop_table('measurement_value')
    op.drop_table('measurement_type')
    op.drop_table('measurement')
    op.drop_table('image_type')
    op.drop_table('gcp')
    op.drop_table('fusion_parameter')
    op.drop_table('fusion')
    op.drop_table('camera_fusion')
    op.drop_table('calibration_parameter')
    # ### end Alembic commands ###
